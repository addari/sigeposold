<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdmMaDocsT', 'doctrine');

/**
 * BaseAdmMaDocsT
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property integer $modulo
 * @property string $origen
 * @property integer $tipo_fiscal
 * @property integer $afecta_cuentas
 * @property string $signo_cuentas
 * @property integer $contiene_renglones
 * @property integer $afecta_inventario
 * @property integer $reserva_inventario
 * @property string $signo_inventario
 * @property integer $id_cuenta
 * @property integer $activo
 * @property timestamp $timestamp
 * @property Doctrine_Collection $AdmTrDocs
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method integer             getModulo()             Returns the current record's "modulo" value
 * @method string              getOrigen()             Returns the current record's "origen" value
 * @method integer             getTipoFiscal()         Returns the current record's "tipo_fiscal" value
 * @method integer             getAfectaCuentas()      Returns the current record's "afecta_cuentas" value
 * @method string              getSignoCuentas()       Returns the current record's "signo_cuentas" value
 * @method integer             getContieneRenglones()  Returns the current record's "contiene_renglones" value
 * @method integer             getAfectaInventario()   Returns the current record's "afecta_inventario" value
 * @method integer             getReservaInventario()  Returns the current record's "reserva_inventario" value
 * @method string              getSignoInventario()    Returns the current record's "signo_inventario" value
 * @method integer             getIdCuenta()           Returns the current record's "id_cuenta" value
 * @method integer             getActivo()             Returns the current record's "activo" value
 * @method timestamp           getTimestamp()          Returns the current record's "timestamp" value
 * @method Doctrine_Collection getAdmTrDocs()          Returns the current record's "AdmTrDocs" collection
 * @method AdmMaDocsT          setId()                 Sets the current record's "id" value
 * @method AdmMaDocsT          setNombre()             Sets the current record's "nombre" value
 * @method AdmMaDocsT          setModulo()             Sets the current record's "modulo" value
 * @method AdmMaDocsT          setOrigen()             Sets the current record's "origen" value
 * @method AdmMaDocsT          setTipoFiscal()         Sets the current record's "tipo_fiscal" value
 * @method AdmMaDocsT          setAfectaCuentas()      Sets the current record's "afecta_cuentas" value
 * @method AdmMaDocsT          setSignoCuentas()       Sets the current record's "signo_cuentas" value
 * @method AdmMaDocsT          setContieneRenglones()  Sets the current record's "contiene_renglones" value
 * @method AdmMaDocsT          setAfectaInventario()   Sets the current record's "afecta_inventario" value
 * @method AdmMaDocsT          setReservaInventario()  Sets the current record's "reserva_inventario" value
 * @method AdmMaDocsT          setSignoInventario()    Sets the current record's "signo_inventario" value
 * @method AdmMaDocsT          setIdCuenta()           Sets the current record's "id_cuenta" value
 * @method AdmMaDocsT          setActivo()             Sets the current record's "activo" value
 * @method AdmMaDocsT          setTimestamp()          Sets the current record's "timestamp" value
 * @method AdmMaDocsT          setAdmTrDocs()          Sets the current record's "AdmTrDocs" collection
 * 
 * @package    sige
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmMaDocsT extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('adm_ma_docs_t');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('modulo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('origen', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('tipo_fiscal', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('afecta_cuentas', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('signo_cuentas', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '+',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('contiene_renglones', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('afecta_inventario', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reserva_inventario', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('signo_inventario', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '+',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_cuenta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('activo', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('timestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AdmTrDocs', array(
             'local' => 'id',
             'foreign' => 'id_tipo'));
    }
}
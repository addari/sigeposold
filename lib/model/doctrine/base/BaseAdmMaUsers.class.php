<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdmMaUsers', 'doctrine');

/**
 * BaseAdmMaUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property integer $id_contacto
 * @property integer $activo
 * @property timestamp $timestamp
 * @property AdmMaContact $AdmMaContact
 * @property Doctrine_Collection $AdmMaEmpUsersR
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getUsername()       Returns the current record's "username" value
 * @method string              getPassword()       Returns the current record's "password" value
 * @method integer             getIdContacto()     Returns the current record's "id_contacto" value
 * @method integer             getActivo()         Returns the current record's "activo" value
 * @method timestamp           getTimestamp()      Returns the current record's "timestamp" value
 * @method AdmMaContact        getAdmMaContact()   Returns the current record's "AdmMaContact" value
 * @method Doctrine_Collection getAdmMaEmpUsersR() Returns the current record's "AdmMaEmpUsersR" collection
 * @method AdmMaUsers          setId()             Sets the current record's "id" value
 * @method AdmMaUsers          setUsername()       Sets the current record's "username" value
 * @method AdmMaUsers          setPassword()       Sets the current record's "password" value
 * @method AdmMaUsers          setIdContacto()     Sets the current record's "id_contacto" value
 * @method AdmMaUsers          setActivo()         Sets the current record's "activo" value
 * @method AdmMaUsers          setTimestamp()      Sets the current record's "timestamp" value
 * @method AdmMaUsers          setAdmMaContact()   Sets the current record's "AdmMaContact" value
 * @method AdmMaUsers          setAdmMaEmpUsersR() Sets the current record's "AdmMaEmpUsersR" collection
 * 
 * @package    sige
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmMaUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('adm_ma_users');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_contacto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('activo', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('timestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AdmMaContact', array(
             'local' => 'id_contacto',
             'foreign' => 'id'));

        $this->hasMany('AdmMaEmpUsersR', array(
             'local' => 'id',
             'foreign' => 'id_usuario'));
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdmMaItemsT', 'doctrine');

/**
 * BaseAdmMaItemsT
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property timestamp $timestamp
 * @property Doctrine_Collection $AdmMaItems
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getNombre()     Returns the current record's "nombre" value
 * @method timestamp           getTimestamp()  Returns the current record's "timestamp" value
 * @method Doctrine_Collection getAdmMaItems() Returns the current record's "AdmMaItems" collection
 * @method AdmMaItemsT         setId()         Sets the current record's "id" value
 * @method AdmMaItemsT         setNombre()     Sets the current record's "nombre" value
 * @method AdmMaItemsT         setTimestamp()  Sets the current record's "timestamp" value
 * @method AdmMaItemsT         setAdmMaItems() Sets the current record's "AdmMaItems" collection
 * 
 * @package    sige
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmMaItemsT extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('adm_ma_items_t');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('timestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AdmMaItems', array(
             'local' => 'id',
             'foreign' => 'id_tipo'));
    }
}
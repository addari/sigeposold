<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdmTrDocsDetalleR', 'doctrine');

/**
 * BaseAdmTrDocsDetalleR
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_documento
 * @property integer $id_items
 * @property string $descripcion
 * @property decimal $cantidad
 * @property decimal $costo
 * @property decimal $precio
 * @property decimal $monto_impuesto
 * @property string $alias_impuesto
 * @property timestamp $timestamp
 * @property AdmTrDocs $AdmTrDocs
 * @property AdmMaItems $AdmMaItems
 * 
 * @method integer           getId()             Returns the current record's "id" value
 * @method integer           getIdDocumento()    Returns the current record's "id_documento" value
 * @method integer           getIdItems()        Returns the current record's "id_items" value
 * @method string            getDescripcion()    Returns the current record's "descripcion" value
 * @method decimal           getCantidad()       Returns the current record's "cantidad" value
 * @method decimal           getCosto()          Returns the current record's "costo" value
 * @method decimal           getPrecio()         Returns the current record's "precio" value
 * @method decimal           getMontoImpuesto()  Returns the current record's "monto_impuesto" value
 * @method string            getAliasImpuesto()  Returns the current record's "alias_impuesto" value
 * @method timestamp         getTimestamp()      Returns the current record's "timestamp" value
 * @method AdmTrDocs         getAdmTrDocs()      Returns the current record's "AdmTrDocs" value
 * @method AdmMaItems        getAdmMaItems()     Returns the current record's "AdmMaItems" value
 * @method AdmTrDocsDetalleR setId()             Sets the current record's "id" value
 * @method AdmTrDocsDetalleR setIdDocumento()    Sets the current record's "id_documento" value
 * @method AdmTrDocsDetalleR setIdItems()        Sets the current record's "id_items" value
 * @method AdmTrDocsDetalleR setDescripcion()    Sets the current record's "descripcion" value
 * @method AdmTrDocsDetalleR setCantidad()       Sets the current record's "cantidad" value
 * @method AdmTrDocsDetalleR setCosto()          Sets the current record's "costo" value
 * @method AdmTrDocsDetalleR setPrecio()         Sets the current record's "precio" value
 * @method AdmTrDocsDetalleR setMontoImpuesto()  Sets the current record's "monto_impuesto" value
 * @method AdmTrDocsDetalleR setAliasImpuesto()  Sets the current record's "alias_impuesto" value
 * @method AdmTrDocsDetalleR setTimestamp()      Sets the current record's "timestamp" value
 * @method AdmTrDocsDetalleR setAdmTrDocs()      Sets the current record's "AdmTrDocs" value
 * @method AdmTrDocsDetalleR setAdmMaItems()     Sets the current record's "AdmMaItems" value
 * 
 * @package    sige
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmTrDocsDetalleR extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('adm_tr_docs_detalle_r');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_documento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_items', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('descripcion', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('cantidad', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '3',
             ));
        $this->hasColumn('costo', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('precio', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('monto_impuesto', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('alias_impuesto', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('timestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AdmTrDocs', array(
             'local' => 'id_documento',
             'foreign' => 'id'));

        $this->hasOne('AdmMaItems', array(
             'local' => 'id_items',
             'foreign' => 'id'));
    }
}
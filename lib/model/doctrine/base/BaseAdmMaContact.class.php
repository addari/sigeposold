<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdmMaContact', 'doctrine');

/**
 * BaseAdmMaContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property integer $tipo_contacto
 * @property integer $id_tipo_identificacion
 * @property string $numero_identificacion
 * @property string $direccion
 * @property string $telefonos
 * @property string $email
 * @property integer $exonerado
 * @property integer $jubilado
 * @property timestamp $timestamp
 * @property AdmMaIdentT $AdmMaIdentT
 * @property Doctrine_Collection $AdmMaContactR
 * @property Doctrine_Collection $AdmMaUsers
 * @property Doctrine_Collection $AdmTrDocs
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getNombre()                 Returns the current record's "nombre" value
 * @method integer             getTipoContacto()           Returns the current record's "tipo_contacto" value
 * @method integer             getIdTipoIdentificacion()   Returns the current record's "id_tipo_identificacion" value
 * @method string              getNumeroIdentificacion()   Returns the current record's "numero_identificacion" value
 * @method string              getDireccion()              Returns the current record's "direccion" value
 * @method string              getTelefonos()              Returns the current record's "telefonos" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method integer             getExonerado()              Returns the current record's "exonerado" value
 * @method integer             getJubilado()               Returns the current record's "jubilado" value
 * @method timestamp           getTimestamp()              Returns the current record's "timestamp" value
 * @method AdmMaIdentT         getAdmMaIdentT()            Returns the current record's "AdmMaIdentT" value
 * @method Doctrine_Collection getAdmMaContactR()          Returns the current record's "AdmMaContactR" collection
 * @method Doctrine_Collection getAdmMaUsers()             Returns the current record's "AdmMaUsers" collection
 * @method Doctrine_Collection getAdmTrDocs()              Returns the current record's "AdmTrDocs" collection
 * @method AdmMaContact        setId()                     Sets the current record's "id" value
 * @method AdmMaContact        setNombre()                 Sets the current record's "nombre" value
 * @method AdmMaContact        setTipoContacto()           Sets the current record's "tipo_contacto" value
 * @method AdmMaContact        setIdTipoIdentificacion()   Sets the current record's "id_tipo_identificacion" value
 * @method AdmMaContact        setNumeroIdentificacion()   Sets the current record's "numero_identificacion" value
 * @method AdmMaContact        setDireccion()              Sets the current record's "direccion" value
 * @method AdmMaContact        setTelefonos()              Sets the current record's "telefonos" value
 * @method AdmMaContact        setEmail()                  Sets the current record's "email" value
 * @method AdmMaContact        setExonerado()              Sets the current record's "exonerado" value
 * @method AdmMaContact        setJubilado()               Sets the current record's "jubilado" value
 * @method AdmMaContact        setTimestamp()              Sets the current record's "timestamp" value
 * @method AdmMaContact        setAdmMaIdentT()            Sets the current record's "AdmMaIdentT" value
 * @method AdmMaContact        setAdmMaContactR()          Sets the current record's "AdmMaContactR" collection
 * @method AdmMaContact        setAdmMaUsers()             Sets the current record's "AdmMaUsers" collection
 * @method AdmMaContact        setAdmTrDocs()              Sets the current record's "AdmTrDocs" collection
 * 
 * @package    sige
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmMaContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('adm_ma_contact');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('tipo_contacto', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_tipo_identificacion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero_identificacion', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('telefonos', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('exonerado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('jubilado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('timestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AdmMaIdentT', array(
             'local' => 'id_tipo_identificacion',
             'foreign' => 'id'));

        $this->hasMany('AdmMaContactR', array(
             'local' => 'id',
             'foreign' => 'id_contacto'));

        $this->hasMany('AdmMaUsers', array(
             'local' => 'id',
             'foreign' => 'id_contacto'));

        $this->hasMany('AdmTrDocs', array(
             'local' => 'id',
             'foreign' => 'id_contacto'));
    }
}